{"version":3,"sources":["webpack:///./src/components/Config-Files/constants.js","webpack:///./src/components/Material-UI-Components/MultilineTextFields.js","webpack:///./src/components/Material-UI-Components/Contact-From.js","webpack:///./src/components/Custom Modules/ContactForm.js","webpack:///./src/components/Post.js","webpack:///./src/pages/blog.js"],"names":["PUBLICSTORAGEURL","useStyles","makeStyles","theme","root","margin","spacing","width","MultilineTextFields","props","classes","className","noValidate","autoComplete","style","backgroundColor","TextField","required","id","label","fieldConfiguration","columnName","multiline","rows","value","onChange","event","target","charAt","length","onClickFunction","fieldName","variant","ContactForm","setStateValueOnClick","key","setState","changePage","history","pageURL","push","setButtonVisible","flag","isButtonVisible","getTableContent","Grid","xs","sm","md","ContactFormField","map","nextItem","j","fieldType","TextInput","state","disableReadonly","marginLeft","Captcha","getFieldType","modalTitle","modalBody","loader","open","sendMail","bind","componentWillMount","index","default","this","trim","fetch","headers","method","body","JSON","stringify","then","res","json","result","status","captcha","catch","error","console","log","message","e","render","elements","type","color","height","Button","onClick","disabled","marginTop","fontSize","React","Component","CareerCounseling","useState","floatingContactForm","setFloatingContactForm","Badge","badgeContent","handleFloatingContactForm","Post","title","author","date","description","path","imagesrc","container","justifyContent","marginRight","marginBottom","to","src","alt","AllBlogsQuery","Blog","data","canonical","url","item","allMarkdownRemark","edges","post","node","frontmatter"],"mappings":"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","file":"component---src-pages-blog-js-cd1a508dd1276040e3b2.js","sourcesContent":["export const PUBLICSTORAGEURL = \"https://storage.googleapis.com/production-asset-bucket/pratiiti-website-assets/images/\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '100%'\n    },\n  },\n}));\n\nexport default function MultilineTextFields(props) {\n  const classes = useStyles();\n  const handleChange = event => {\n    if(event.target.value.charAt(event.target.value.length-1) !== '\\''){\n      props.onClickFunction(props.fieldConfiguration.fieldName, event.target.value);\n    }\n  };\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div style={{backgroundColor:'#fffff'}}>\n        <TextField\n          style={{backgroundColor:'#fffff'}}\n          required\n          id=\"outlined-multiline-static\"\n          label={props.fieldConfiguration.columnName}\n          multiline\n          rows=\"5\"\n          value={props.value}\n          onChange={handleChange}\n          variant=\"outlined\"\n        />\n      </div>\n    </form>\n  );\n}\n","import React from \"react\";\nimport Loader from 'react-loader-spinner';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nimport Captcha from '../Custom Modules/Captcha.js';\nimport TextInput from './TextInput.js';\nimport MultilineTextFields from '../Material-UI-Components/MultilineTextFields.js';\nimport AlertDialog from '../Material-UI-Components/Dialog.js';\n\n/* importing json modules */\nimport ContactFormField from '../Page-Data/Contact-Form.json';\n \nexport default class ContactForm extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n          modalTitle:'',\n          modalBody:'',\n          loader: false,\n          open: false\n        };\n        this.sendMail = this.sendMail.bind(this);\n      }\n\n    componentWillMount()\n    {\n      ContactFormField.map((index)=>{\n        this.setState({[index.fieldName]:index.default ? index.default :''});\n      });\n    }\n\n    setStateValueOnClick = (key, value) => {\n      if(key === \"query\"){\n        if(value.charAt(value.length-1) === \"'\"){\n          \n        }else{\n          this.setState({[key]:value});\n        }\n      }else{\n        this.setState({[key]:value});\n      }\n    };\n      \n    changePage = (history, pageURL) =>{\n        history.push(pageURL);\n      };\n\n    setButtonVisible = (flag) => {\n        this.setState({isButtonVisible: flag});\n    };\n\n      sendMail(){\n        this.setState({loader:true});\n        if(this.state[\"firstName\"] !== null \n            && this.state[\"emailAddress\"] !== null\n            && this.state[\"query\"] !== null\n            && this.state[\"phoneNumber\"] !== null\n            && this.state[\"firstName\"].trim().length>0\n            && this.state[\"emailAddress\"].trim().length>0\n            && this.state[\"query\"].trim().length>0\n            && this.state[\"phoneNumber\"].trim().length>0){\n                fetch(\"https://www.api.pratiiti.com/public/sendMail\",{\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json'\n                    },\n                    method: \"POST\",\n                    body: JSON.stringify({\"firstName\":this.state[\"firstName\"],\"lastName\":this.state[\"lastName\"],\n                    \"emailAddress\":this.state[\"emailAddress\"],\"query\":this.state[\"query\"],\"phoneNumber\":this.state[\"phoneNumber\"]})\n                  })\n                    .then(res => res.json())\n                    .then(\n                      (result) => {\n                        if(result.status === \"Success\"){\n                            this.setState({open:true, loader:false, captcha:false, modalTitle:'Success', modalBody:'Thank you for contacting us. We will reach you shortly.'});\n                        }\n                        else if(result.status === \"Fail\"){\n                            this.setState({open:true, loader:false, captcha:false, modalTitle:'Failure', modalBody:'Something went wrong.'});\n                        }\n                      }\n                    )\n                    .catch(\n                      error =>  {\n                          try {\n                              error.json().then(body => {\n                                  console.log(body);\n                                  console.log(\"message = \"+body.message);\n                              });\n                          } catch (e) {\n                          } \n                          finally{\n                            this.setState({open:true, loader:false, captcha:false, modalTitle:'Failure', modalBody:'Something went wrong.'});\n                          }\n                      }\n                  );\n        }else{\n            this.setState({open:true, loader:false, captcha:false, modalTitle:'Failure', modalBody:'First Name, Email ID, Phone Number or Query cannot be empty.'});\n        }\n    }\n  \n  getTableContent = () => {\n  \n      const getFieldType = (nextItem) => {\n        switch (nextItem.fieldType) {\n          case \"text\":\n            return (<TextInput value={this.state[nextItem.fieldName]} fieldConfiguration={nextItem} disableReadonly = {this.props.disableReadonly} onClickFunction = {this.setStateValueOnClick}/>);\n          case \"multiline\":\n            return (<MultilineTextFields value={this.state[nextItem.fieldName]} fieldConfiguration={nextItem} onClickFunction = {this.setStateValueOnClick}/>)\n          case \"captcha\":\n            return(<div style={{marginLeft: 10}}><Captcha onClickFunction = {this.setStateValueOnClick}/></div>)\n          default:\n            return null;\n        }\n      };\n    \n      const iterateItem = (item) => {\n         return item.map(function (nextItem, j) {\n           return (\n              <Grid xs={11} sm={11} md={11}>{getFieldType(nextItem)}</Grid>\n           );\n         })\n      }\n          return (\n                <Grid xs={12} sm={12} md={12}>\n                {iterateItem(ContactFormField)}\n                </Grid>\n          );\n    };\n    \n\n  render(){\n    const elements = this.getTableContent(ContactFormField);\n    return (\n      <div>\n        <div className=\"mainContainerContact\">\n            <div className=\"header\">\n            </div>\n            <div className=\"contactFormBody\">\n                {elements}\n                <div style={{marginLeft: 10}}>\n                  {this.state.loader ? <Loader type=\"Circles\" color=\"#f7941e\" height={30} width={30}/> \n                  : <Button onClick={() => this.sendMail()} disabled={this.state.captcha} className={this.state.captcha ? \"buttonDisabled\" : \"\"} style={{marginTop:20, color: '#ffffff', backgroundColor: '#f7941e', fontSize: 16}}>{\"Submit\"}</Button>\n                  }\n                </div>\n            </div>\n        </div>\n        <AlertDialog\n          modalTitle={this.state.modalTitle}\n          modalBody={this.state.modalBody}\n          open={this.state.open}\n          onClickFunction = {this.setStateValueOnClick}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\"\n\n/* importing custom modules */\nimport ContactForm from '../Material-UI-Components/Contact-From'\nimport Badge from '../Material-UI-Components/Badge';\n\nexport default function CareerCounseling(){\n\n  const [floatingContactForm, setFloatingContactForm] = React.useState();\n\n\n  const handleFloatingContactForm = (value) =>{\n    setFloatingContactForm(value);\n  };\n\n  return(\n    <div>\n    {floatingContactForm?\n        <div>\n          <div className=\"floatingContactForm\">\n            <div className=\"width100 mgbt40\">\n              <ContactForm/>\n            </div>\n          </div>\n        </div>\n        :\n    <div></div>}\n          <div className=\"floatingQueryFormButton\">\n            <Badge \n                type={'floatingIcon'} \n                badgeContent={'Contact-us'}\n                handleFloatingContactForm={handleFloatingContactForm}\n                floatingContactForm = {floatingContactForm}\n            />\n          </div> \n  </div>\n)\n}","import Grid from '@material-ui/core/Grid';\nimport React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Post = ({ title, author, date, description, path, imagesrc }) => (\n  <Grid container style={{justifyContent: 'center'}}>\n    <Grid xs={12} sm={6} md={5} style={{marginRight: 20, marginLeft: 20, marginBottom: 40}}>\n      <div>\n        <div className=\"blogTitle\">\n          <Link to={path} className=\"blogTitle\">{title}</Link>\n        </div>\n        <div className=\"createdDate\">{date}</div>\n        <p className=\"blogDescriptionP\">{description}</p>\n        <div className=\"authorComponent\">\n            <div className=\"authorName\">{\"Posted by \"+author}</div>\n        </div>\n      </div>\n    </Grid>\n    <Grid xs={12} sm={6} md={4} style={{marginRight: 20, marginLeft: 20, marginBottom: 40}}>\n      <img className=\"imageBorder\" src={imagesrc} alt={title}/>\n    </Grid>\n  </Grid> \n);\n\nexport default Post;","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Post from \"../components/Post\";\nimport Grid from '@material-ui/core/Grid';\n\n/* importing custom modules */\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport ContactForm from '../components/Custom Modules/ContactForm';\nimport {PUBLICSTORAGEURL} from '../components/Config-Files/constants.js';\n\nexport const AllBlogsQuery = graphql`\n  query AllBlogPosts {\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            date\n            title\n            description\n            author\n            path\n            imagesrc\n          }\n        }\n      }\n    }\n  }\n`\n\nconst Blog = ({ data }) => (\n  <Layout>\n    <SEO \n      title=\"Blog\" \n      description=\"Blog Page\"\n      canonical={\"https://www.pratiiti.com/blog\"}\n      url={\"https://www.pratiiti.com/blog\"}\n    />\n    <div className=\"blogLogo\">\n        <img src={PUBLICSTORAGEURL+\"Blog/Logo.png\"} alt=\"blog logo\"/>\n    </div>\n    <Grid container className=\"mainBlogPageContainer\">  \n        <Grid item xs={12} sm={12} md={12}>\n            <div className=\"blogPageHeading\">\n                {\"Latest Blogs\"}\n            </div>\n        </Grid>\n    </Grid>\n    { \n      data.allMarkdownRemark.edges.map(post => {\n        const { title, author, date, description, path, imagesrc } = post.node.frontmatter;\n\n        return (\n          <Post\n            title={title}\n            author={author}\n            date={date}\n            description={description}\n            key={`${date}__${title}`}\n            path={path}\n            imagesrc={imagesrc}\n          />\n        )\n      })\n    }\n    <ContactForm/>\n  </Layout>\n);\n\nexport default Blog;"],"sourceRoot":""}